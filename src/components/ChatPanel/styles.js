import { makeStyles, shorthands, tokens } from '@fluentui/react-components';
import { shadows } from '../../styles/shadows';
import { spacing } from '../../styles/typography';
import { colors } from '../../styles/colors';

const useStyles = makeStyles({
  chatHeader: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    ...shorthands.padding(spacing.md, spacing['2xl']),
    ...shorthands.borderBottom('1px', 'solid', tokens.colorNeutralStroke1),
    backgroundColor: tokens.colorNeutralBackground2,
    flexShrink: 0,
    boxSizing: 'border-box',
    boxShadow: shadows.subtle.xs,
    position: 'relative',
    zIndex: 5,
    animation: 'fadeInDown 0.4s ease-out',
    minHeight: '64px',
  },
  chatContent: {
    flex: 1,
    ...shorthands.padding(spacing.lg, spacing['2xl']),
    ...shorthands.overflow('auto'),
    display: 'flex',
    flexDirection: 'column',
    ...shorthands.gap(spacing['2xl']),
    minHeight: 0,
    boxSizing: 'border-box',
    scrollBehavior: 'smooth',
  },
  userMessageContainer: {
    display: 'flex',
    justifyContent: 'flex-end',
    alignItems: 'flex-start',
    ...shorthands.gap(spacing.md),
    alignSelf: 'flex-end',
    maxWidth: '75%',
    minWidth: 0,
  },
  aiMessageContainer: {
    display: 'flex',
    alignItems: 'flex-start',
    ...shorthands.gap(spacing.md),
    maxWidth: '75%',
    minWidth: 0,
  },
  message: {
    width: '100%',
    minWidth: 0,
  },
  userMessageCard: {
    backgroundColor: colors.message.user.background,
    color: colors.message.user.foreground,
    border: `1px solid ${colors.message.user.border}`,
    ...shorthands.padding(spacing.md, spacing.lg),
    wordWrap: 'break-word',
    ...shorthands.overflow('hidden'),
    fontSize: tokens.fontSizeBase300,
    lineHeight: '1.6',
    letterSpacing: '0.025em',
    transitionProperty: 'transform, box-shadow, border-color',
    transitionDuration: tokens.durationFaster,
    transitionTimingFunction: tokens.curveDecelerateMid,
    boxShadow: shadows.components.message,
    animation: 'messageSlideIn 0.3s ease-out',
    ':hover': {
      transform: 'translateY(-2px) scale(1.01)',
      boxShadow: shadows.interactive.hover,
      borderLeftColor: colors.brand.stroke,
    },
    ':active': {
      transform: 'translateY(-1px) scale(0.99)',
      animation: 'buttonPress 0.15s ease-out',
    },
  },
  aiMessageCard: {
    backgroundColor: colors.message.ai.background,
    color: colors.message.ai.foreground,
    border: `1px solid ${colors.message.ai.border}`,
    ...shorthands.padding(spacing.md, spacing.lg),
    wordWrap: 'break-word',
    ...shorthands.overflow('hidden'),
    fontSize: tokens.fontSizeBase300,
    lineHeight: '1.6',
    letterSpacing: '0.025em',
    transitionProperty: 'transform, box-shadow, border-color',
    transitionDuration: tokens.durationFaster,
    transitionTimingFunction: tokens.curveDecelerateMid,
    boxShadow: shadows.components.message,
    animation: 'messageSlideIn 0.3s ease-out',
    ':hover': {
      transform: 'translateY(-2px) scale(1.01)',
      boxShadow: shadows.interactive.hover,
      borderLeftColor: colors.brand.stroke,
    },
    ':active': {
      transform: 'translateY(-1px) scale(0.99)',
      animation: 'buttonPress 0.15s ease-out',
    },
  },
  messageFooter: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: spacing.md,
    flexWrap: 'wrap',
    ...shorthands.gap(spacing.sm),
    fontSize: tokens.fontSizeBase200,
    color: tokens.colorNeutralForeground3,
  },
  chatInputContainer: {
    ...shorthands.padding(spacing.lg, spacing['2xl']),
    borderTop: `1px solid ${tokens.colorNeutralStroke1}`,
    backgroundColor: tokens.colorNeutralBackground2,
    flexShrink: 0,
    boxSizing: 'border-box',
    boxShadow: shadows.subtle.xs,
    position: 'relative',
    zIndex: 5,
    animation: 'fadeInUp 0.4s ease-out',
  },
  chatInputBox: {
    display: 'flex',
    flexDirection: 'column',
    ...shorthands.padding(spacing.sm, spacing.md),
    border: `1px solid ${tokens.colorNeutralStroke2}`,
    ...shorthands.borderRadius(tokens.borderRadiusLarge),
    backgroundColor: tokens.colorNeutralBackground1,
    fontSize: tokens.fontSizeBase300,
    lineHeight: '1.5',
    transitionProperty: 'border-color, box-shadow',
    transitionDuration: tokens.durationNormal,
    boxShadow: shadows.components.input,
    ':focus-within': {
      borderLeftColor: tokens.colorBrandStroke1,
      boxShadow: shadows.interactive.focus,
    },
  },
  inputToolbar: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: spacing.sm,
    flexWrap: 'wrap',
    ...shorthands.gap(spacing.sm),
  },
  iconButton: {
    transitionProperty: 'color, transform, box-shadow',
    transitionDuration: tokens.durationFaster,
    transitionTimingFunction: tokens.curveDecelerateMid,
    boxShadow: shadows.components.button,
    animation: 'fadeInUp 0.3s ease-out',
    ':hover': {
      transform: 'translateY(-2px) scale(1.05)',
      boxShadow: shadows.interactive.hover,
    },
    ':active': {
      transform: 'translateY(0) scale(0.95)',
      boxShadow: shadows.interactive.pressed,
      animation: 'buttonPress 0.15s ease-out',
    },
    ':focus-visible': {
      outlineStyle: 'solid',
      outlineWidth: '2px',
      outlineColor: tokens.colorBrandStroke1,
      outlineOffset: '2px',
      boxShadow: shadows.interactive.focus,
      animation: 'focusRing 0.3s ease-out',
    },
  },
});

export default useStyles;


